@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro);

/* Colors */
:root {
    --background: #fefefe;
    --text: #4b507a;
    --cyan: #60daaa;
    --yellow: #fbca67;
    --orange: #ff8a30;
    --red: #f45e61;
    --purple: #6477b9;
    --blue: #0eb7da;
    --black:#000000
}

/* Basic styles */
.custom_btn {
    cursor: pointer;
    background: none;
    border: 0;
    box-sizing: border-box;
    margin: 1em;
    padding: 10px 15px;

    box-shadow: inset 0 0 0 1px transparent;
    color: var(--black);
    font-size: inherit;
    font-weight: 700;

    position: relative;
    vertical-align: middle;
}

.custom_btn::before,
.custom_btn::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
}

.draw {
    transition: color 0.25s;
}

.draw::before,
.draw::after {
    /* Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts */
    border: 1px solid transparent;
    width: 0;
    height: 0;
}

/* This covers the top & right borders (expands right, then down) */
.draw::before {
    top: 0;
    left: 0;
}

/* And this the bottom & left borders (expands left, then up) */
.draw::after {
    bottom: 0;
    right: 0;
}

.draw:hover {
    color: var(--black);
}

/* Hover styles */
.draw:hover::before,
.draw:hover::after {
    width: 100%;
    height: 100%;
}

.draw:hover::before {
    border-top-color: var(--black); /* Make borders visible */
    border-right-color: var(--black);
    transition:
        width 0.125s ease-out, /* Width expands first */
        height 0.125s ease-out 0.125s; /* And then height */
}

.draw:hover::after {
    border-bottom-color: var(--black); /* Make borders visible */
    border-left-color: var(--black);
    transition:
        border-color 0s ease-out 0.25s, /* Wait for ::before to finish before showing border */
        width 0.125s ease-out 0.25s, /* And then expanding width */
        height 0.125s ease-out 0.375s; /* And finally height */
}

/* Inherits from .draw */
.meet {
    
}

.meet:hover {
    color: var(--yellow);
}

/* Start ::after in same position as ::before */
.meet::after {
   top: 0;
   left: 0;
}

/* Change colors */
.meet:hover::before {
   border-top-color: var(--yellow);
   border-right-color: var(--yellow);
}

.meet:hover::after {
   border-bottom-color: var(--yellow);
   border-left-color: var(--yellow);
   transition:
       height 0.25s ease-out,
       width 0.25s ease-out 0.25s; /* Animate height first, then width */
}

/* Does not inherit */
.center {
    
}

.center:hover {
   color: var(--purple);
}

/* Set up base styles, we're going to scale instead of animating width/height */
.center::before,
.center::after {
   top: 0;
   left: 0;
   height: 100%;
   width: 100%;
   transform-origin: center; /* Ensure scaling is done from the center (expands outwards) */
}

/* scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>); */
.center::before {
   border-top: 2px solid var(--purple);
   border-bottom: 2px solid var(--purple);
   transform: scale3d(0,1,1); /* Shrink only width */
}

.center::after {
   border-left: 2px solid var(--purple);
   border-right: 2px solid var(--purple);
   transform: scale3d(1,0,1); /* Shrink only height */
}

.center:hover::before,
.center:hover::after {
   transform: scale3d(1,1,1); /* Show full-size */
   transition: transform 0.5s;
}

/* Border spins around element */
/* ::before holds three borders that appear separately, one at a time */
/* ::after holds one border that spins around to cover ::before's borders, making their appearance seem smooth */

.spin {
   width: 5em;
   height: 5em;
   padding: 0;

}

.spin:hover {
   color: var(--blue);
}

.spin::before,
.spin::after {
   top: 0;
   left: 0;
}

.spin::before {
   border: 2px solid transparent; /* We're animating border-color again */
}

.spin:hover::before {
   border-top-color: var(--blue); /* Show borders */
   border-right-color: var(--blue);
   border-bottom-color: var(--blue);

   transition:
       border-top-color 0.15s linear, /* Stagger border appearances */
       border-right-color 0.15s linear 0.10s,
       border-bottom-color 0.15s linear 0.20s;
}

.spin::after {
   border-width :2px; 
}

.spin:hover::after {
   border-top :2px solid var(--blue); /* Shows border */
   border-left-width :2px; /* Solid edges, invisible borders */
   border-right-width :2px; /* Solid edges, invisible borders */
   transform :rotate(270deg); /* Rotate around circle */

transition:
      transform .4s linear .35s,
      border-left-width .4s linear .35s; 
}

.circle {
   border-radius :100%;
   box-shadow :none;

}

.circle::before,
.circle::after {
     border-radius :100%;
 }

.thick {
     color :var(--red);

     &:hover { 
         color:#fff; 
         font-weight :700; 
     }

     .thick::before { 
         border :2.5em solid transparent; 
         z-index :-1; 
     }

     .thick::after { 
         mix-blend-mode :color-dodge; 
         z-index :-1; 
     }

     .thick:hover::before { 
         background :var(--red); 
         border-top-color :var(--red); 
         border-right-color :var(--red); 
         border-bottom-color :var(--red); 

         transition:
             background .4s linear,
             border-top-color .15s linear,
             border-right-color .15s linear .15s,
             border-bottom-color .15s linear .25s; 
     }

     .thick:hover::after { 
         border-top :2.5em solid var(--red); 
         border-left-width :2.5em; 
         border-right-width :2.5em; 
     }
 }
